[{"D:\\react\\projects\\buildtestsl\\src\\index.js":"1","D:\\react\\projects\\buildtestsl\\src\\reportWebVitals.js":"2","D:\\react\\projects\\buildtestsl\\src\\App.js":"3","D:\\react\\projects\\buildtestsl\\src\\redux\\store.js":"4","D:\\react\\projects\\buildtestsl\\src\\Components\\MainList.js":"5","D:\\react\\projects\\buildtestsl\\src\\Components\\ListItem.js":"6","D:\\react\\projects\\buildtestsl\\src\\redux\\index.js":"7","D:\\react\\projects\\buildtestsl\\src\\redux\\filtering\\reducer.js":"8","D:\\react\\projects\\buildtestsl\\src\\redux\\list\\reducer.js":"9","D:\\react\\projects\\buildtestsl\\src\\redux\\api\\reducer.js":"10","D:\\react\\projects\\buildtestsl\\src\\redux\\filtering\\actions.js":"11","D:\\react\\projects\\buildtestsl\\src\\redux\\list\\actions.js":"12","D:\\react\\projects\\buildtestsl\\src\\redux\\api\\actions.js":"13","D:\\react\\projects\\buildtestsl\\src\\redux\\filtering\\types.js":"14","D:\\react\\projects\\buildtestsl\\src\\redux\\api\\types.js":"15","D:\\react\\projects\\buildtestsl\\src\\redux\\list\\types.js":"16","D:\\react\\projects\\shoppinglist\\src\\index.js":"17","D:\\react\\projects\\shoppinglist\\src\\App.js":"18","D:\\react\\projects\\shoppinglist\\src\\reportWebVitals.js":"19","D:\\react\\projects\\shoppinglist\\src\\Components\\MainList.js":"20","D:\\react\\projects\\shoppinglist\\src\\redux\\store.js":"21","D:\\react\\projects\\shoppinglist\\src\\Components\\ListItem.js":"22","D:\\react\\projects\\shoppinglist\\src\\redux\\index.js":"23","D:\\react\\projects\\shoppinglist\\src\\redux\\filtering\\reducer.js":"24","D:\\react\\projects\\shoppinglist\\src\\redux\\api\\reducer.js":"25","D:\\react\\projects\\shoppinglist\\src\\redux\\list\\reducer.js":"26","D:\\react\\projects\\shoppinglist\\src\\redux\\filtering\\actions.js":"27","D:\\react\\projects\\shoppinglist\\src\\redux\\list\\actions.js":"28","D:\\react\\projects\\shoppinglist\\src\\redux\\api\\actions.js":"29","D:\\react\\projects\\shoppinglist\\src\\redux\\filtering\\types.js":"30","D:\\react\\projects\\shoppinglist\\src\\redux\\api\\types.js":"31","D:\\react\\projects\\shoppinglist\\src\\redux\\list\\types.js":"32","D:\\react\\projects\\shoppinglist\\src\\redux\\options\\actions.js":"33","D:\\react\\projects\\shoppinglist\\src\\redux\\options\\types.js":"34","D:\\react\\projects\\shoppinglist\\src\\redux\\options\\reducer.js":"35","D:\\react\\projects\\shoppinglist\\src\\Components\\Options.js":"36"},{"size":682,"mtime":1608497936970,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":332,"mtime":1608497906046,"results":"40","hashOfConfig":"38"},{"size":450,"mtime":1608498323179,"results":"41","hashOfConfig":"38"},{"size":5358,"mtime":1608497951481,"results":"42","hashOfConfig":"38"},{"size":2844,"mtime":1608497951480,"results":"43","hashOfConfig":"38"},{"size":340,"mtime":1608497948218,"results":"44","hashOfConfig":"38"},{"size":1442,"mtime":1608497948215,"results":"45","hashOfConfig":"38"},{"size":774,"mtime":1608497948220,"results":"46","hashOfConfig":"38"},{"size":715,"mtime":1608497948211,"results":"47","hashOfConfig":"38"},{"size":1069,"mtime":1608497948214,"results":"48","hashOfConfig":"38"},{"size":585,"mtime":1608497948219,"results":"49","hashOfConfig":"38"},{"size":739,"mtime":1608497948208,"results":"50","hashOfConfig":"38"},{"size":419,"mtime":1608497948217,"results":"51","hashOfConfig":"38"},{"size":139,"mtime":1608497948212,"results":"52","hashOfConfig":"38"},{"size":234,"mtime":1608497948221,"results":"53","hashOfConfig":"38"},{"size":683,"mtime":1611404469000,"results":"54","hashOfConfig":"55"},{"size":580,"mtime":1611611022077,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":1611404469000,"results":"57","hashOfConfig":"55"},{"size":22371,"mtime":1611610597197,"results":"58","hashOfConfig":"55"},{"size":512,"mtime":1611404469000,"results":"59","hashOfConfig":"55"},{"size":10486,"mtime":1611487441402,"results":"60","hashOfConfig":"55"},{"size":422,"mtime":1611404469000,"results":"61","hashOfConfig":"55"},{"size":958,"mtime":1611610705664,"results":"62","hashOfConfig":"55"},{"size":1093,"mtime":1611404469000,"results":"63","hashOfConfig":"55"},{"size":1033,"mtime":1611404469000,"results":"64","hashOfConfig":"55"},{"size":695,"mtime":1611404469000,"results":"65","hashOfConfig":"55"},{"size":799,"mtime":1611404469000,"results":"66","hashOfConfig":"55"},{"size":1612,"mtime":1611487267975,"results":"67","hashOfConfig":"55"},{"size":263,"mtime":1611404469000,"results":"68","hashOfConfig":"55"},{"size":265,"mtime":1611404469000,"results":"69","hashOfConfig":"55"},{"size":343,"mtime":1611404469000,"results":"70","hashOfConfig":"55"},{"size":408,"mtime":1611404469000,"results":"71","hashOfConfig":"55"},{"size":143,"mtime":1611404469000,"results":"72","hashOfConfig":"55"},{"size":643,"mtime":1611609480720,"results":"73","hashOfConfig":"55"},{"size":7804,"mtime":1611611029284,"results":"74","hashOfConfig":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"lru21t",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"1dqrail",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"113"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":87,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"113"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\projects\\buildtestsl\\src\\index.js",[],["154","155"],"D:\\react\\projects\\buildtestsl\\src\\reportWebVitals.js",[],"D:\\react\\projects\\buildtestsl\\src\\App.js",["156"],"import logo from './logo.svg';\nimport './App.css';\nimport MainList from './Components/MainList';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <MainList/>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;","D:\\react\\projects\\buildtestsl\\src\\redux\\store.js",[],"D:\\react\\projects\\buildtestsl\\src\\Components\\MainList.js",["157","158","159","160","161","162","163","164","165","166","167","168"],"import React, { useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ListItem from './ListItem';\r\nimport {setFilterText, setFilterType, setFilterTypeHebrew, fetch, setFilterCategory, setFinal, setFinalHebrew} from '../redux/';\r\n\r\nconst FILTERING_TYPE_WHOLE = 'FILTERING_TYPE_WHOLE';\r\nconst FILTERING_TYPE_SOME = 'FILTERING_TYPE_SOME';\r\n\r\nconst FILTERING_CAT_ALL = 'הכל';\r\n\r\nconst renderByFilter = (filtering, filteringType, fetchData, filterCategory, final, list) => {\r\n    if(filterCategory != FILTERING_CAT_ALL)\r\n        fetchData = fetchData.filter(item => item.category == filterCategory);\r\n        \r\n    if(filtering != '') {\r\n        switch(filteringType) {\r\n            case FILTERING_TYPE_WHOLE:\r\n                for(let i=0;i<filtering.length;i++) {\r\n                    fetchData = fetchData.filter(item => item.title[i] == filtering[i]);\r\n                    console.log()\r\n                }\r\n                break;\r\n            case FILTERING_TYPE_SOME:\r\n                fetchData = fetchData.filter(item => item.title.includes(filtering));\r\n                break;\r\n        }\r\n    }\r\n\r\n    if(final)\r\n        fetchData = fetchData.filter((item) => list[item.img.split(\"\").reverse().join(\"\").slice(8).split(\"\").reverse().join(\"\")]);\r\n\r\n    fetchData = fetchData.map((item) => <ListItem logo={item.img} title={item.title} category={item.category} id={item.img.split(\"\").reverse().join(\"\").slice(8).split(\"\").reverse().join(\"\")}/>);\r\n    return fetchData;\r\n}\r\n\r\nconst changeFilterType = (current, setFilterTypeFunc, setFilterTypeHebrewFunc) => {\r\n    switch(current) {\r\n        case FILTERING_TYPE_WHOLE:\r\n            setFilterTypeFunc(FILTERING_TYPE_SOME);\r\n            setFilterTypeHebrewFunc(\"שם חלקי\");\r\n            break;\r\n        case FILTERING_TYPE_SOME:\r\n            setFilterTypeFunc(FILTERING_TYPE_WHOLE);\r\n            setFilterTypeHebrewFunc(\"שם מדויק\");\r\n            break;\r\n    }\r\n}\r\n\r\nconst changeFinal = (final, setFinalFunc, setFinalHebrewFunc) => {\r\n    switch(final) {\r\n        case true:\r\n            setFinalFunc(false);\r\n            setFinalHebrewFunc(\"הכנת רשימה סופית\");\r\n            break;\r\n        case false:\r\n            setFinalFunc(true);\r\n            setFinalHebrewFunc(\"חזרה להכנת רשימה\");\r\n            break;\r\n    }\r\n}\r\n\r\nfunction MainList(props) {\r\n    useEffect(props.fetch, []);\r\n    return (\r\n        !props.fetchLoading ?\r\n        <div>\r\n            <input placeholder={`חיפוש לפי: ${props.filterTypeHebrew}`} className=\"text-center\" onChange={event => props.setFilterText(event.target.value)}></input>\r\n            <div className=\"dropdown mt-2\">\r\n                <button className=\"btn btn-secondary rounded-0 dropdown-toggle\" dir=\"rtl\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    {props.filterCategory}\r\n                </button>\r\n                <button className=\"btn btn-secondary rounded-0\" type=\"button\" onClick={() => changeFinal(props.final, props.setFinal, props.setFinalHebrew)}>\r\n                    {props.finalHebrew}\r\n                </button>\r\n                <div className=\"dropdown-menu bg-secondary\" aria-labelledby=\"dropdownMenuButton\">\r\n                    <a className=\"dropdown-item\" href=\"#\" onClick={event => props.setFilterCategory(event.target.innerText)}>הכל</a>\r\n                    <a className=\"dropdown-item\" href=\"#\" onClick={event => props.setFilterCategory(event.target.innerText)}>אוכל</a>\r\n                    <a className=\"dropdown-item\" href=\"#\" onClick={event => props.setFilterCategory(event.target.innerText)}>היגיינה</a>\r\n                    <a className=\"dropdown-item\" href=\"#\" onClick={event => props.setFilterCategory(event.target.innerText)}>תינוק</a>\r\n                </div>\r\n            </div>\r\n            <button onClick={() => changeFilterType(props.filterType, props.setFilterType, props.setFilterTypeHebrew)} className=\"btn btn-danger my-2\">חיפוש לפי: {props.filterTypeHebrew}</button>\r\n            \r\n            {renderByFilter(props.filterText, props.filterType, props.fetchData, props.filterCategory, props.final, props.list)}\r\n\r\n        </div>\r\n        :\r\n        <div>Loading...</div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filterText: state.filtering.filterText,\r\n        filterType: state.filtering.filterType,\r\n        filterTypeHebrew: state.filtering.filterTypeHebrew,\r\n        filterCategory: state.filtering.filterCategory,\r\n        final: state.filtering.final,\r\n        finalHebrew: state.filtering.finalHebrew,\r\n\r\n        fetchLoading: state.api.loading,\r\n        fetchData: state.api.data,\r\n        fetchError: state.api.error,\r\n\r\n        list: state.list\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setFilterText: val => dispatch(setFilterText(val)),\r\n        setFilterType: val => dispatch(setFilterType(val)),\r\n        setFilterTypeHebrew: val => dispatch(setFilterTypeHebrew(val)),\r\n        fetch: () => dispatch(fetch()),\r\n        setFilterCategory: val => dispatch(setFilterCategory(val)),\r\n        setFinal: val => dispatch(setFinal(val)),\r\n        setFinalHebrew: val => dispatch(setFinalHebrew(val))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainList);","D:\\react\\projects\\buildtestsl\\src\\Components\\ListItem.js",["169"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addItemToList, removeItemFromList, createItemInList, resetItemFromList} from '../redux/';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst API_IMG_SRC = 'https://raw.githubusercontent.com/SaHaRzZz/test/main/imgs/';\r\n\r\nconst itemAdd = (id, list, addItemToListFunc, createItemInListFunc) => {\r\n    if(list[id])\r\n        addItemToListFunc(id);\r\n    else\r\n        createItemInListFunc(id);\r\n}\r\n\r\nconst itemRemove = (id, list, removeItemFromListFunc) => {\r\n    if(list[id])\r\n        removeItemFromListFunc(id);\r\n}\r\n\r\nfunction ListItem(props) {\r\n    return (\r\n        <div className=\"card flex-row my-1 shadow\" style={{backgroundColor: props.list[props.id] ? \"rgb(0, 0, 255, 0.5)\" : \"rgb(255, 0, 0, 0.5)\"}}>\r\n            <div className=\"card-header border-0\">\r\n                <img src={`${API_IMG_SRC}${props.logo}`} style={{width: '64px'}} onClick={() => itemAdd(props.id, props.list, props.addItemToList, props.createItemInList)}/>\r\n            </div>\r\n            <div className=\"card-body row p-0\">\r\n                <div className=\"card-title text-decoration-underline font-weight-bold col-5 position-absolute h5 m-0 align-self-center\">{props.title}</div>\r\n                <div className=\"card-title text-decoration-underline font-weight-bold col-5 border-left m-0\" onClick={() => itemAdd(props.id, props.list, props.addItemToList, props.createItemInList)}></div>\r\n                <div className=\"col-3 text-center h5 font-italic border-left border-right m-0 align-self-center position-relative\">\r\n                    {props.list[props.id] ? [\r\n                        <button className=\"btn rounded-circle shadow-lg\" style={{backgroundColor: \"rgb(0, 0, 255, 0.5)\", fontSize: \"1.1rem\"}} onClick={() => window.confirm(\"לאפס את המוצר?\") && props.resetItemFromList(props.id)}><FontAwesomeIcon icon={faTimesCircle}/>{props.list[props.id]}</button>,\r\n                    ]\r\n                    :\r\n                    ''}\r\n                </div>\r\n                <div className=\"card-title mb-2 text-muted col-4 m-0 align-self-center\" onClick={() => itemRemove(props.id, props.list, props.removeItemFromList)}>{props.category}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        list: state.list\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addItemToList: val => dispatch(addItemToList(val)),\r\n        removeItemFromList: val => dispatch(removeItemFromList(val)),\r\n        createItemInList: val => dispatch(createItemInList(val)),\r\n        resetItemFromList: val => dispatch(resetItemFromList(val))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);","D:\\react\\projects\\buildtestsl\\src\\redux\\index.js",[],"D:\\react\\projects\\buildtestsl\\src\\redux\\filtering\\reducer.js",[],"D:\\react\\projects\\buildtestsl\\src\\redux\\list\\reducer.js",[],"D:\\react\\projects\\buildtestsl\\src\\redux\\api\\reducer.js",[],"D:\\react\\projects\\buildtestsl\\src\\redux\\filtering\\actions.js",[],"D:\\react\\projects\\buildtestsl\\src\\redux\\list\\actions.js",[],"D:\\react\\projects\\buildtestsl\\src\\redux\\api\\actions.js",[],"D:\\react\\projects\\buildtestsl\\src\\redux\\filtering\\types.js",[],"D:\\react\\projects\\buildtestsl\\src\\redux\\api\\types.js",[],"D:\\react\\projects\\buildtestsl\\src\\redux\\list\\types.js",[],"D:\\react\\projects\\shoppinglist\\src\\index.js",[],["170","171"],"D:\\react\\projects\\shoppinglist\\src\\App.js",[],"D:\\react\\projects\\shoppinglist\\src\\reportWebVitals.js",[],"D:\\react\\projects\\shoppinglist\\src\\Components\\MainList.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"import React, { useEffect, useState } from 'react';\nimport {connect} from 'react-redux';\nimport {faCog, faCopy, faList, faGlobe} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {Link} from 'react-router-dom';\nimport {encode, decode} from 'js-base64';\nimport {WhatsappShareButton, WhatsappIcon} from '@kashuab/react-share';\nimport Popup from 'reactjs-popup';\nimport * as uuid from 'uuid';\nimport axios from 'axios';\n\nimport ListItem from './ListItem';\nimport {setFilterText, setFilterType, fetch, setFilterCategory, setFinal, setList, setImagesSize, setTitlesSize, setLangauge, setOnline, setId, setLastConnected, setListLength} from '../redux/';\nimport {updateOptions} from './Options';\nimport heFlag from '../imgs/he_flag.png';\nimport enFlag from '../imgs/en_flag.png';\nimport loadingGif from '../imgs/loading.svg';\n\nlet updatingList;\nlet dListGetTimeout;\nlet dListPostTimeout;\nlet preLoadedImages;\n\nconst renderByFilter = (filtering, filteringType, fetchData, filterCategory, final, list, currentPage, listLength, setLimitPage, limitPage, setCurrentPage, setItemsRendered, itemsRendered) => {\n    if(filterCategory)\n        fetchData = fetchData.filter(item => item.filter == filterCategory);\n        \n    if(filtering != '') {\n        filtering = filtering.toLowerCase();\n        if(filteringType) {\n            fetchData = fetchData.filter(item => item.title.includes(filtering));\n        } else {\n            for(let i=0;i<filtering.length;i++) {\n                fetchData = fetchData.filter(item => item.title[i] == filtering[i]);\n            }\n        }\n    }\n\n    fetchData = fetchData.sort((a, b) => `${a.order}${a.title}` < `${b.order}${b.title}` ? -1 : 1);\n\n    if(final)\n        fetchData = fetchData.filter(item => list[item.img.split(\"\").reverse().join(\"\").slice(8).split(\"\").reverse().join(\"\")]);\n\n    listLength = parseInt(listLength);\n    if(fetchData.length <= listLength + currentPage * listLength && !limitPage) {\n        setLimitPage(true);\n    } else if(!(fetchData.length <= listLength + currentPage * listLength) && limitPage) {\n        setLimitPage(false);\n    }\n    if(fetchData.length <= currentPage * listLength && currentPage > 0) {\n        setCurrentPage(currentPage - 1);\n    }\n    let currentLength = 0;\n    fetchData = fetchData.map((item, index)=> {\n        if(index < listLength + currentPage * listLength && index >= currentPage * listLength) {\n            currentLength += 1;\n            return <ListItem logo={item.img} title={item.title} category={item.category} id={item.img.split(\"\").reverse().join(\"\").slice(8).split(\"\").reverse().join(\"\")}/>;\n        }\n        else {\n            return;\n        }\n    });\n    if(itemsRendered != currentLength) {\n        setItemsRendered(currentLength);\n    }\n    return fetchData;\n}\n\nconst getBase64Code = (list, msg) => {\n    list = JSON.stringify(list);\n    list = encode(list);\n    setClipboard(list);\n    alert(`${msg}!`);\n}\n\nconst getListString = (list, fetchData, successMsg, noteMsg) => {\n    let listKeys = Object.keys(list);\n    let listValues = Object.values(list).map(item => item[0] != undefined ? item[0] : item);\n    listKeys = listKeys.map((listKey, index) => {\n        try {\n            const specificItem = fetchData.find(item => item.img.split(\"\").reverse().join(\"\").slice(8).split(\"\").reverse().join(\"\") == listKey);\n            if(specificItem && listValues[index]) {\n                specificItem.title = specificItem.title.replace(/(^\\w{1})|(\\s{1}\\w{1})/g, match => match.toUpperCase());\n                const note = list[specificItem.img.split(\"\").reverse().join(\"\").slice(8).split(\"\").reverse().join(\"\")][1];\n                return `${specificItem.title}: ${listValues[index]}${note ? `, ${noteMsg}: ${note}` : ''}`;\n            }\n        }\n        catch {\n            return;\n        }\n    });\n    if(listKeys) {\n\n        listKeys = listKeys.join('\\n');\n        setClipboard(listKeys);\n        alert(`${successMsg}!`);\n    }\n}\n\nconst DynamicWhatsappShareCode = list => {\n    const getUrl = async () => {\n        updatingList = list;\n        updatingList = JSON.stringify(updatingList);\n        updatingList = encode(updatingList);\n        return updatingList;\n    };\n  \n    return (\n        <WhatsappShareButton url={getUrl}><WhatsappIcon size={60}/></WhatsappShareButton>\n    );\n};\n\nconst DynamicWhatsappShareString = (list, fetchData, noteMsg) => {\n    const getUrl = async () => {\n        let listKeys = Object.keys(list);\n        let listValues = Object.values(list).map(item => item[0] != undefined ? item[0] : item);\n        listKeys = listKeys.map((listKey, index) => {\n            const specificItem = fetchData.find(item => item.img.split(\"\").reverse().join(\"\").slice(8).split(\"\").reverse().join(\"\") == listKey);\n            if(specificItem && listValues[index]) {\n                specificItem.title = specificItem.title.replace(/(^\\w{1})|(\\s{1}\\w{1})/g, match => match.toUpperCase());\n                const note = list[specificItem.img.split(\"\").reverse().join(\"\").slice(8).split(\"\").reverse().join(\"\")][1];\n                return `${specificItem.title}: ${listValues[index]}${note ? `, ${noteMsg}: ${note}` : ''}`;\n            }\n        });\n        if(listKeys) {\n            listKeys = listKeys.join('\\n');\n            return listKeys;\n        }\n    };\n  \n    return (\n        <WhatsappShareButton url={getUrl}><WhatsappIcon size={60}/></WhatsappShareButton>\n    );\n};\n\nconst sharedListStart = (id, setList, promptMsg, errorMsg, setOnline, setId, setLastConnected, fetchData, setOnlineLoading) => {\n    setOnlineLoading(true);\n    axios.get(`${fetchData.general.server}/dlist?id=${id}`, {timeout: 15000})\n    .then(json => {\n        setList(json.data, promptMsg, errorMsg);\n        setId(id);\n        setOnline(true);\n        setLastConnected(id);\n        setOnlineLoading(false);\n        localStorage.setItem('options-last-connected', id);\n        dListGetTimeout = setTimeout(() => sharedListGet(id, setList, promptMsg, errorMsg, fetchData), 1000);\n    }).catch(() => {});\n}\n\nconst sharedListGet = (id, setList, promptMsg, errorMsg, fetchData) => {\n    axios.get(`${fetchData.general.server}/dlist?id=${id}`, {timeout: 1000})\n    .then(json => {\n        setList(json.data, promptMsg, errorMsg);\n    }).catch(() => {});\n}\n\nexport const sharedListPost = (id, list, fetchData) => {\n    if(dListPostTimeout) {\n        clearTimeout(dListPostTimeout);\n    }\n    dListPostTimeout = setTimeout(() => {\n        axios.post(`${fetchData.general.server}/dlist?id=${id}`, list, {timeout: 1000}).catch(() => {});\n        dListPostTimeout = undefined;\n    }, 500);\n}\n\n\nconst setPasteCode = (setList, promptMsg, errorMsg, setOnline, setId, id, isOnline, setLastConnected, fetchData, setOnlineLoading) => {\n    try {\n        let list = prompt(`${promptMsg}`);\n        if(list == null) {\n            return;\n        }\n        if(uuid.validate(list)) {\n            if(dListGetTimeout) {\n                clearInterval(dListGetTimeout);\n                dListGetTimeout = undefined;\n                setOnline(false);\n            }\n            sharedListStart(list, setList, promptMsg, errorMsg, setOnline, setId, setLastConnected, fetchData, setOnlineLoading);\n        } else{            \n            list = decode(list);\n            list = JSON.parse(list);\n            if(isOnline) {\n                sharedListPost(id, list, fetchData);\n            }\n            setList(list);\n        }\n    }\n    catch {\n        alert(`${errorMsg}!`);\n    }\n}\n\nconst resetList = (setList, id, isOnline, fetchData, setCurrentPage) => {\n    if(isOnline) {\n        sharedListPost(id, {}, fetchData);\n    }\n    setList(JSON.parse(atob('e30=')));\n    setCurrentPage(0);\n}\n\nconst setClipboard = (str) => {\n    const el = document.createElement('textarea');\n    el.value = str;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nconst changeLangauge = (setLangaugeFunc, langauge) => {\n    setLangaugeFunc(langauge);\n    localStorage.setItem('options-langauge', langauge);\n}\n\nconst preloadImages = (fetchData, imagesHost) => {\n    preLoadedImages = true;\n    if (!preloadImages.list) {\n        preloadImages.list = [];\n    }\n    const list = preloadImages.list;\n    for (let i = 0; i < fetchData.length; i++) {\n        const img = new Image();\n        img.onload = function() {\n            const index = list.indexOf(this);\n            if (index !== -1) {\n                list.splice(index, 1);\n            }\n        }\n        list.push(img);\n        img.src = `${imagesHost}${fetchData[i].img}`;\n    }\n}\n\nconst scrollToTop = () => {\n    document.getElementsByName('filterText')[0].scrollIntoView({behavior: 'smooth'});\n}\n\nfunction MainList(props) {\n    useEffect(props.fetch, []);\n    useEffect(() => updateOptions(props.setImagesSize, props.setTitlesSize, props.setLangauge, props.setLastConnected, props.setListLength), []);\n    useEffect(() => {\n        if(localStorage.getItem('saved-list')) {\n            updatingList = localStorage.getItem('saved-list');\n            updatingList = decode(updatingList);\n            updatingList = JSON.parse(updatingList);\n            props.setList(updatingList);\n        }\n        else {\n            localStorage.setItem('saved-list', {});\n        }\n    }, []);\n    useEffect(() => {\n        updatingList = props.list;\n        updatingList = JSON.stringify(updatingList);\n        updatingList = encode(updatingList);\n        localStorage.setItem('saved-list', updatingList);\n\n        function clean(obj) {\n            for (const propName in obj) {\n              if (obj[propName] == '') {\n                delete obj[propName];\n              }\n            }\n            return obj\n          }\n\n          clean(props.list);\n    });\n\n    useEffect(() => {\n        if(dListGetTimeout) {\n            clearInterval(dListGetTimeout);\n            dListGetTimeout = setTimeout(() => sharedListGet(props.id, props.setList, props.fetchData[props.lang].strings[15], props.fetchData[props.lang].strings[16], props.fetchData), dListPostTimeout ? 1500 : 1000);\n        }\n    }, [props.list]);\n\n    const [currentPage, setCurrentPage] = useState(0);\n    const [limitPage, setLimitPage] = useState(false);\n\n    useEffect(() => {\n        setCurrentPage(0);\n    }, [props.filterText, props.filterCategory, props.final, props.filterType]);\n\n    useEffect(() => !props.fetchLoading ? preloadImages(props.fetchData.he.items, props.fetchData.general.images) : '', [props.fetchLoading]);\n\n    const [scrollY, setScrollY] = useState(0);\n\n    window.addEventListener('scroll', () => setScrollY(window.scrollY));\n\n    const [itemsRendered, setItemsRendered] = useState();\n    const [onlineLoading, setOnlineLoading] = useState();\n\n    return (\n        !props.fetchLoading ?\n        <div className=\"text-center\">\n            <Link to=\"/options\">\n                <FontAwesomeIcon type=\"button\" onClick={() => {\n                    if(props.isOnline) {\n                        clearInterval(dListGetTimeout);\n                        dListGetTimeout = undefined;\n                        props.setOnline(false);\n                        props.setFilterText('');\n                    }\n                }} icon={faCog} size=\"4x\" className=\"position-absolute border-right border-bottom\" style={{left: 0, zIndex: 1}}/>\n            </Link>\n            <img type=\"button\" onClick={() => changeLangauge(props.setLangauge, props.lang == 'en' ? 'he' : 'en')} src={props.lang == 'en' ? enFlag : heFlag} className=\"position-absolute\" style={{right: 0, zIndex: 1}}></img>\n            <div className=\"w-100 position-fixed btn\" onClick={scrollToTop} style={{zIndex: 4, left: '50%', transform: 'translateX(-50%)', backgroundColor: '#f6f6f6', opacity: 0.75, height: '50px', display: scrollY > 280 ? 'block' : 'none', fontSize: '30px'}}>{props.fetchData[props.lang].strings[32]}</div>\n            <input name=\"filterText\" placeholder={`${props.fetchData[props.lang].strings[0]}: ${props.filterType ? props.fetchData[props.lang].strings[2] : props.fetchData[props.lang].strings[1]}`} className=\"text-center\" onChange={event => props.setFilterText(event.target.value)}></input>\n            {props.appVersion != props.fetchData.general.version ? <div className=\"text-danger\" dir={`${props.lang == 'en' ? 'ltr' : 'rtl'}`}>{props.fetchData[props.lang].strings[34]}!</div> : ''}\n            <div className=\"dropdown mt-2\">\n                <button className=\"btn btn-primary rounded-0 dropdown-toggle\" dir=\"rtl\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    {props.fetchData[props.lang].strings[10+props.filterCategory]}\n                </button>\n                <div className=\"dropdown-menu bg-secondary\" aria-labelledby=\"dropdownMenuButton\">\n                    <a className=\"dropdown-item\" href=\"#\" onClick={() => {\n                        props.setFilterCategory(0);\n                        props.setFilterText('');\n                        document.getElementsByName('filterText')[0].value = '';\n                    }}>{props.fetchData[props.lang].strings[10]}</a>\n                    <a className=\"dropdown-item\" href=\"#\" onClick={() => {\n                        props.setFilterCategory(1);\n                        props.setFilterText('');\n                        document.getElementsByName('filterText')[0].value = '';\n                    }}>{props.fetchData[props.lang].strings[11]}</a>\n                    <a className=\"dropdown-item\" href=\"#\" onClick={() => {\n                        props.setFilterCategory(2);\n                        props.setFilterText('');\n                        document.getElementsByName('filterText')[0].value = '';\n                    }}>{props.fetchData[props.lang].strings[12]}</a>\n                    <a className=\"dropdown-item\" href=\"#\" onClick={() => {\n                        props.setFilterCategory(3);\n                        props.setFilterText('');\n                        document.getElementsByName('filterText')[0].value = '';\n                    }}>{props.fetchData[props.lang].strings[13]}</a>\n                </div>\n                <button className=\"btn btn-primary rounded-0\" type=\"button\" onClick={e => {\n                    e.target.blur();\n                    props.setFinal(!props.final);\n                    props.setFilterText('');\n                    document.getElementsByName('filterText')[0].value = '';\n                }}>{`${props.final ? props.fetchData[props.lang].strings[3] : props.fetchData[props.lang].strings[4]}`}</button>\n                <div>\n                    <div>\n                        <Popup closeOnDocumentClick={false} trigger={<div className=\"btn btn-info rounded-0\"><FontAwesomeIcon icon={faList} size=\"1x\"/></div>}>\n                            <div className=\"col text-center\">\n                                <button className=\"btn btn-secondary rounded-0 col-12\" onClick={e => {\n                                    e.target.blur();\n                                    setPasteCode(props.setList, props.fetchData[props.lang].strings[15], props.fetchData[props.lang].strings[16], props.setOnline, props.setId, props.id, props.isOnline, props.setLastConnected, props.fetchData, setOnlineLoading);\n                                }}>{props.fetchData[props.lang].strings[5]}</button>\n                                <Popup closeOnDocumentClick={false} trigger={<div className=\"btn btn-primary rounded-0 col-12\">{props.fetchData[props.lang].strings[6]}</div>}>\n\n                                    <Popup closeOnDocumentClick={true} trigger={<div className=\"btn btn-secondary rounded-0 col-12\">{props.fetchData[props.lang].strings[7]}</div>}>\n                                        <div className=\"d-flex justify-content-around\">\n                                            <button className=\"btn btn-secondary rounded-0\" onClick={e => {\n                                                e.target.blur();\n                                                getListString(props.list, props.fetchData[props.lang].items, props.fetchData[props.lang].strings[14], props.fetchData[props.lang].strings[26]);\n                                            }}><FontAwesomeIcon icon={faCopy} size=\"2x\"/></button>\n                                            {DynamicWhatsappShareString(props.list, props.fetchData[props.lang].items, props.fetchData[props.lang].strings[26])}\n                                        </div>\n                                    </Popup>\n\n                                    <Popup closeOnDocumentClick={true} trigger={<div className=\"btn btn-secondary rounded-0 col-12\">{props.fetchData[props.lang].strings[8]}</div>}>\n                                        <div className=\"d-flex justify-content-around\">\n                                            <button className=\"btn btn-secondary rounded-0\" onClick={e => {\n                                                e.target.blur();\n                                                getBase64Code(props.list, props.fetchData[props.lang].strings[14]);\n                                            }}><FontAwesomeIcon icon={faCopy} size=\"2x\"/></button>\n                                            {DynamicWhatsappShareCode(props.list)}\n                                        </div>\n                                    </Popup>\n                                    \n                                </Popup>\n                                <button className=\"btn btn-danger rounded-0 col-12\" onClick={e => {\n                                    e.target.blur();\n                                    window.confirm(`${props.fetchData[props.lang].strings[17]}?`) && resetList(props.setList, props.id, props.isOnline, props.fetchData, setCurrentPage);\n                                }}>{props.fetchData[props.lang].strings[9]}</button>\n                            </div>\n                        </Popup>\n                    </div>\n                </div>\n            </div>\n            <button onClick={e => {\n                e.target.blur();\n                props.setFilterType(!props.filterType);\n            }} className=\"btn btn-danger my-2\">{`${props.fetchData[props.lang].strings[0]}: ${props.filterType ? props.fetchData[props.lang].strings[2] : props.fetchData[props.lang].strings[1]}`}</button>\n            {onlineLoading ? [<br/>, <img src={loadingGif}/>] : ''}\n            {props.isOnline ? <div dir={`${props.lang == \"en\" ? 'ltr' : 'rtl'}`} className=\"btn d-block\" onClick={() => {\n                if(window.confirm(`${props.fetchData[props.lang].strings[28]}?`)) {\n                    clearInterval(dListGetTimeout);\n                    dListGetTimeout = undefined;\n                    props.setOnline(false);\n                }\n            }}><FontAwesomeIcon icon={faGlobe} size=\"2x\"/><div>{props.fetchData[props.lang].strings[27]}</div></div> : onlineLoading ? '' : props.lastConnected ? [<br/>, <btn dir={`${props.lang == \"en\" ? 'ltr' : 'rtl'}`} className=\"btn btn-info mb-1\" onClick={() => sharedListStart(props.lastConnected, props.setList, props.fetchData[props.lang].strings[15], props.fetchData[props.lang].strings[16], props.setOnline, props.setId, props.setLastConnected, props.fetchData, setOnlineLoading)}>{`${props.fetchData[props.lang].strings[29]}: ${props.lastConnected}`}</btn>] : ''}\n            <div className=\"w-100\">\n                <div className={`btn btn-primary col-6 rounded-0 ${limitPage ? 'disabled' : ''}`} onClick={() => !limitPage ? setCurrentPage(currentPage + 1) : ''}>{props.fetchData[props.lang].strings[30]}</div>\n                <div className={`btn btn-primary col-6 rounded-0 ${!currentPage ? 'disabled' : ''}`}  onClick={() => currentPage ? setCurrentPage(currentPage - 1) : ''}>{props.fetchData[props.lang].strings[31]}</div>\n            </div>\n            {renderByFilter(props.filterText, props.filterType, props.fetchData[props.lang].items, props.filterCategory, props.final, props.list, currentPage, props.listLength, setLimitPage, limitPage, setCurrentPage, setItemsRendered, itemsRendered)}\n            <div className=\"w-100\" style={{display: itemsRendered > 5 ? 'block' : 'none'}}>\n                <div className={`btn btn-primary col-6 rounded-0 ${limitPage ? 'disabled' : ''}`} onClick={() => !limitPage ? [setCurrentPage(currentPage + 1), window.scroll(0, 0)] : ''}>{props.fetchData[props.lang].strings[30]}</div>\n                <div className={`btn btn-primary col-6 rounded-0 ${!currentPage ? 'disabled' : ''}`}  onClick={() => currentPage ? [setCurrentPage(currentPage - 1), window.scroll(0, 0)] : ''}>{props.fetchData[props.lang].strings[31]}</div>\n            </div>\n        </div>\n        :\n        <div className=\"text-center display-2\"><img src={loadingGif}/></div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        filterText: state.filtering.filterText,\n        filterType: state.filtering.filterType,\n        filterCategory: state.filtering.filterCategory,\n        final: state.filtering.final,\n        listLength: state.filtering.listLength,\n\n        fetchLoading: state.api.loading,\n        fetchData: state.api.data,\n        fetchError: state.api.error,\n        isOnline: state.api.isOnline,\n        id: state.api.id,\n        lastConnected: state.api.lastConnected,\n\n\n        list: state.list,\n        notes: state.notes,\n\n        lang: state.options.lang,\n        appVersion: state.options.appVersion\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setFilterText: val => dispatch(setFilterText(val)),\n        setFilterType: val => dispatch(setFilterType(val)),\n        fetch: () => dispatch(fetch()),\n        setFilterCategory: val => dispatch(setFilterCategory(val)),\n        setFinal: val => dispatch(setFinal(val)),\n        setList: val => dispatch(setList(val)),\n        setImagesSize: val => dispatch(setImagesSize(val)),\n        setTitlesSize: val => dispatch(setTitlesSize(val)),\n        setLangauge: val => dispatch(setLangauge(val)),\n        setOnline: val => dispatch(setOnline(val)),\n        setId: val => dispatch(setId(val)),\n        setLastConnected: val => dispatch(setLastConnected(val)),\n        setListLength: val => dispatch(setListLength(val))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainList);","D:\\react\\projects\\shoppinglist\\src\\redux\\store.js",[],"D:\\react\\projects\\shoppinglist\\src\\Components\\ListItem.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290"],"import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {addItemToList, removeItemFromList, createItemInList, resetItemFromList, setNote} from '../redux/';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlusCircle, faMinusCircle, faStickyNote} from '@fortawesome/free-solid-svg-icons';\nimport {faStickyNote as farStickyNote} from '@fortawesome/free-regular-svg-icons';\nimport Popup from 'reactjs-popup';\nimport '../../node_modules/reactjs-popup/dist/index.css';\nimport {sharedListPost} from './MainList';\nimport axios from 'axios';\n\nimport placeholderImg from '../imgs/_400.png';\nlet analyticsPutTimeout;\nlet analyticsItems = {};\n\nconst AnalyticsPut = (item, fetchData) => {\n    if(analyticsItems[item.id]) {\n        analyticsItems[item.id] += 1;\n    } else {\n        analyticsItems[item.id] = 1;\n    }\n    if(analyticsPutTimeout) {\n        clearTimeout(analyticsPutTimeout);\n    }\n    analyticsPutTimeout = setTimeout(() => {\n        axios.put(`${fetchData.general.server}/analytics`, analyticsItems, {timeout: 1000}).catch(() => {});\n        analyticsPutTimeout = undefined;\n        analyticsItems = {};\n    }, 2000)\n}\n\nconst itemAdd = (id, list, addItemToListFunc, createItemInListFunc, apiID, isOnline, fetchData) => {\n    if(list[id]) {\n        if(list[id][0] == 80) {\n            alert('מקסימום 80 יחידות למוצר!');\n        }\n        else {\n            addItemToListFunc(id);\n            if(isOnline) {\n                sharedListPost(apiID, {...list, [id]: [list[id][0] + 1, list[id][1]]}, fetchData);\n            }\n            AnalyticsPut({id}, fetchData);\n        }\n    }\n    else {\n        createItemInListFunc(id);\n        if(isOnline) {\n            sharedListPost(apiID, {...list, [id]: [1, '']}, fetchData);\n        }\n        AnalyticsPut({id}, fetchData);\n    }\n}\n\nconst itemRemove = (id, list, removeItemFromListFunc, resetItemFromListFunc, apiID, isOnline, fetchData) => {\n    if(list[id][0] == 1) {\n        resetItemFromListFunc(id);\n        if(isOnline) {\n            sharedListPost(apiID, {...list, [id]: ''}, fetchData);\n        }\n    }\n    else if(list[id][0]) {\n        removeItemFromListFunc(id);\n        if(isOnline) {\n            sharedListPost(apiID, {...list, [id]: [list[id][0] - 1, list[id][1]]}, fetchData);\n        }\n    }\n}\n\nconst itemReset = (resetItemFromListFunc, id, apiID, isOnline, list, fetchData) => {\n    resetItemFromListFunc(id);\n    if(isOnline) {\n        sharedListPost(apiID, {...list, [id]: ''}, fetchData);\n    }\n}\n\nconst modifyNote = (setNote, id, content, apiID, isOnline, list, fetchData) => {\n    setNote(id, content);\n    if(isOnline) {\n        sharedListPost(apiID, {...list, [id]: [list[id][0], content]}, fetchData);\n    }\n}\n\nconst numToFont = num => {\n    switch(num) {\n        case 0: {return 'A'};\n        case 1: {return 'B'};\n        case 2: {return 'C'};\n        case 3: {return 'D'};\n        case 4: {return 'E'};\n        case 5: {return 'F'};\n        case 6: {return 'G'};\n        case 7: {return 'H'};\n        case 8: {return 'I'};\n        case 9: {return 'J'};\n        case 10: {return 'K'};\n        case 11: {return 'L'};\n        case 12: {return 'M'};\n        case 13: {return 'N'};\n        case 14: {return 'O'};\n        case 15: {return 'P'};\n        case 16: {return 'Q'};\n        case 17: {return 'R'};\n        case 18: {return 'S'};\n        case 19: {return 'T'};\n        case 20: {return 'U'};\n        case 21: {return 'V'};\n        case 22: {return 'W'};\n        case 23: {return 'X'};\n        case 24: {return 'Y'};\n        case 25: {return 'Z'};\n        case 26: {return '8'};\n        case 27: {return '9'};\n        case 28: {return ':'};\n        case 29: {return ';'};\n        case 30: {return '<'};\n        case 31: {return '='};\n        case 32: {return 'a'};\n        case 33: {return 'b'};\n        case 34: {return 'c'};\n        case 35: {return 'd'};\n        case 36: {return 'e'};\n        case 37: {return 'f'};\n        case 38: {return 'g'};\n        case 39: {return 'h'};\n        case 40: {return 'i'};\n        case 41: {return 'j'};\n        case 42: {return 'k'};\n        case 43: {return 'l'};\n        case 44: {return 'm'};\n        case 45: {return 'n'};\n        case 46: {return 'o'};\n        case 47: {return 'p'};\n        case 48: {return 'q'};\n        case 49: {return 'r'};\n        case 50: {return 's'};\n        case 51: {return 't'};\n        case 52: {return 'u'};\n        case 53: {return 'v'};\n        case 54: {return 'w'};\n        case 55: {return 'x'};\n        case 56: {return 'y'};\n        case 57: {return 'z'};\n        case 58: {return '4'};\n        case 59: {return '5'};\n        case 60: {return '6'};\n        case 61: {return '7'};\n        case 62: {return '!'};\n        case 63: {return '\"'};\n        case 64: {return '#'};\n        case 65: {return '$'};\n        case 66: {return '%'};\n        case 67: {return '&'};\n        case 68: {return \"'\"};\n        case 69: {return '('};\n        case 70: {return ')'};\n        case 71: {return '*'};\n        case 72: {return '+'};\n        case 73: {return ','};\n        case 74: {return '-'};\n        case 75: {return '.'};\n        case 76: {return '/'};\n        case 77: {return '0'};\n        case 78: {return '1'};\n        case 79: {return '2'};\n        case 80: {return '3'};\n    }\n}\n\nfunction ListItem(props) {\n    const [imageLoaded, setImageLoaded] = useState(false);\n\n    return (\n        <div className=\"card flex-row my-1 shadow text-center\" style={{backgroundColor: props.list[props.id] ? \"rgb(0, 0, 255, 0.5)\" : \"rgb(255, 0, 0, 0.5)\"}}>\n            <div className=\"card-header border-0\" style={{height: `${parseInt(props.options.imagesSize.split(\"\").reverse().join(\"\").slice(2).split(\"\").reverse().join(\"\")) + 24}px`}}>\n                <img src={placeholderImg} onLoad={() => setImageLoaded(true)} className=\"user-select-none\" style={{width: props.options.imagesSize, display: imageLoaded ? 'none' : 'block'}}/>\n                <img src={`${props.fetchData.general.images}${props.logo}`} onError={e => e.target.src = placeholderImg} className=\"user-select-none\" style={{width: props.options.imagesSize, display: imageLoaded ? 'block' : 'none'}}/>\n            </div>\n            <div className=\"card-body row p-0 m-0 text-wrap\">\n                <div className=\"card-title text-decoration-underline font-weight-bold col-5 h5 m-0 user-select-none align-self-center text-capitalize\" style={{fontSize: props.options.titlesSize}}>{props.title}</div>\n                \n                {props.list[props.id] ? [\n                    <div className=\"align-self-center\">\n                        <div className=\"col-1\" style={{zIndex: 3}} onClick={() => itemAdd(props.id, props.list, props.addItemToList, props.createItemInList, props.apiID, props.isOnline, props.fetchData)}><FontAwesomeIcon size=\"2x\" icon={faPlusCircle}/></div>\n                        <div className=\"col-1\" style={{zIndex: 3}} onClick={() => itemRemove(props.id, props.list, props.removeItemFromList, props.resetItemFromList, props.apiID, props.isOnline, props.fetchData)}><FontAwesomeIcon size=\"2x\" icon={faMinusCircle}/></div>\n                    </div>,\n                    <div className=\"mx-2 font-italic user-select-none align-self-center\" style={{fontSize: \"2rem\", zIndex: 3, fontFamily: 'numberpile'}} onClick={() => window.confirm(\"לאפס את המוצר?\") && itemReset(props.resetItemFromList, props.id, props.apiID, props.isOnline, props.list, props.fetchData)}>{numToFont(props.list[props.id][0])}</div>,\n                    <Popup trigger={<div className=\"align-self-center mx-2\" style={{zIndex: 4}}><FontAwesomeIcon icon={props.list[props.id][1] ? faStickyNote : farStickyNote} size=\"2x\"/></div>} position=\"left center\">\n                        <div className=\"text-center\">\n                            <div className=\"font-weight-bold\">{props.title}</div>\n                            <div dir={`${props.options.lang == 'en' ? 'ltr' : 'rtl'}`}>{props.list[props.id][1]}</div>\n                            {props.list[props.id][1] ? [\n                                <button className=\"btn btn-primary rounded-0\" onClick={() => modifyNote(props.setNote, props.id, prompt(`הערה ל${props.title}:`, props.list[props.id][1]), props.apiID, props.isOnline, props.list, props.fetchData)}>שנה</button>,\n                                <button className=\"btn btn-danger rounded-0\" onClick={() => modifyNote(props.setNote, props.id, '', props.apiID, props.isOnline, props.list, props.fetchData)}>מחק</button>\n                            ]\n                            :\n                            <button className=\"btn btn-primary rounded-0\" onClick={() => modifyNote(props.setNote, props.id, prompt(`הערה ל${props.title}:`), props.apiID, props.isOnline, props.list, props.fetchData)}>הכן הערה</button>}\n                        </div>\n                    </Popup>\n                    \n                ]\n            :\n            ''}\n                <div className=\"text-center h5 font-italic align-self-center\">\n                    {props.list[props.id] ? [\n                        ''\n                    ]\n                    :\n                    <div className=\"rounded-circle shadow-lg col-1 font-italic mx-2\">\n                        <div className=\"mr-2 position-absolute\" style={{transform: \"translate(-50%, -40%)\"}} onClick={() => itemAdd(props.id, props.list, props.addItemToList, props.createItemInList, props.apiID, props.isOnline, props.fetchData)}><FontAwesomeIcon size=\"2x\"  icon={faPlusCircle}/></div>\n                    </div>}\n                </div>\n                <div className=\"card-title h-100 text-muted m-0 user-select-none align-self-center position-absolute text-capitalize\" style={{right: '10px'}}>{props.category}</div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        list: state.list,\n        options: state.options,\n        isOnline: state.api.isOnline,\n        apiID: state.api.id,\n        fetchData: state.api.data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addItemToList: val => dispatch(addItemToList(val)),\n        removeItemFromList: val => dispatch(removeItemFromList(val)),\n        createItemInList: val => dispatch(createItemInList(val)),\n        resetItemFromList: val => dispatch(resetItemFromList(val)),\n        setNote: (val1, val2) => dispatch(setNote(val1, val2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);","D:\\react\\projects\\shoppinglist\\src\\redux\\index.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\filtering\\reducer.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\api\\reducer.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\list\\reducer.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\filtering\\actions.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\list\\actions.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\api\\actions.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\filtering\\types.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\api\\types.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\list\\types.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\options\\actions.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\options\\types.js",[],"D:\\react\\projects\\shoppinglist\\src\\redux\\options\\reducer.js",[],"D:\\react\\projects\\shoppinglist\\src\\Components\\Options.js",["291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313"],{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","severity":1,"message":"319","line":1,"column":8,"nodeType":"320","messageId":"321","endLine":1,"endColumn":12},{"ruleId":"322","severity":1,"message":"323","line":13,"column":23,"nodeType":"324","messageId":"325","endLine":13,"endColumn":25},{"ruleId":"322","severity":1,"message":"326","line":14,"column":60,"nodeType":"324","messageId":"325","endLine":14,"endColumn":62},{"ruleId":"322","severity":1,"message":"323","line":16,"column":18,"nodeType":"324","messageId":"325","endLine":16,"endColumn":20},{"ruleId":"327","severity":1,"message":"328","line":17,"column":9,"nodeType":"329","messageId":"330","endLine":27,"endColumn":10},{"ruleId":"322","severity":1,"message":"326","line":20,"column":72,"nodeType":"324","messageId":"325","endLine":20,"endColumn":74},{"ruleId":"327","severity":1,"message":"328","line":38,"column":5,"nodeType":"329","messageId":"330","endLine":47,"endColumn":6},{"ruleId":"327","severity":1,"message":"328","line":51,"column":5,"nodeType":"329","messageId":"330","endLine":60,"endColumn":6},{"ruleId":"331","severity":1,"message":"332","line":64,"column":5,"nodeType":"320","endLine":64,"endColumn":14},{"ruleId":"333","severity":1,"message":"334","line":77,"column":21,"nodeType":"335","endLine":77,"endColumn":126},{"ruleId":"333","severity":1,"message":"334","line":78,"column":21,"nodeType":"335","endLine":78,"endColumn":126},{"ruleId":"333","severity":1,"message":"334","line":79,"column":21,"nodeType":"335","endLine":79,"endColumn":126},{"ruleId":"333","severity":1,"message":"334","line":80,"column":21,"nodeType":"335","endLine":80,"endColumn":126},{"ruleId":"336","severity":1,"message":"337","line":25,"column":17,"nodeType":"335","endLine":25,"endColumn":174},{"ruleId":"314","replacedBy":"338"},{"ruleId":"316","replacedBy":"339"},{"ruleId":"322","severity":1,"message":"326","line":26,"column":58,"nodeType":"324","messageId":"325","endLine":26,"endColumn":60},{"ruleId":"322","severity":1,"message":"323","line":28,"column":18,"nodeType":"324","messageId":"325","endLine":28,"endColumn":20},{"ruleId":"322","severity":1,"message":"326","line":34,"column":68,"nodeType":"324","messageId":"325","endLine":34,"endColumn":70},{"ruleId":"340","severity":1,"message":"341","line":60,"column":13,"nodeType":"342","messageId":"343","endLine":60,"endColumn":20},{"ruleId":"322","severity":1,"message":"323","line":63,"column":22,"nodeType":"324","messageId":"325","endLine":63,"endColumn":24},{"ruleId":"322","severity":1,"message":"323","line":78,"column":62,"nodeType":"324","messageId":"325","endLine":78,"endColumn":64},{"ruleId":"340","severity":1,"message":"344","line":79,"column":46,"nodeType":"345","messageId":"346","endLine":79,"endColumn":48},{"ruleId":"322","severity":1,"message":"326","line":81,"column":133,"nodeType":"324","messageId":"325","endLine":81,"endColumn":135},{"ruleId":"340","severity":1,"message":"341","line":89,"column":13,"nodeType":"342","messageId":"343","endLine":89,"endColumn":20},{"ruleId":"322","severity":1,"message":"323","line":116,"column":66,"nodeType":"324","messageId":"325","endLine":116,"endColumn":68},{"ruleId":"340","severity":1,"message":"344","line":117,"column":50,"nodeType":"345","messageId":"346","endLine":117,"endColumn":52},{"ruleId":"322","severity":1,"message":"326","line":118,"column":133,"nodeType":"324","messageId":"325","endLine":118,"endColumn":135},{"ruleId":"318","severity":1,"message":"347","line":221,"column":5,"nodeType":"320","messageId":"321","endLine":221,"endColumn":20},{"ruleId":"331","severity":1,"message":"332","line":244,"column":5,"nodeType":"320","endLine":244,"endColumn":14},{"ruleId":"331","severity":1,"message":"348","line":245,"column":142,"nodeType":"349","endLine":245,"endColumn":144,"suggestions":"350"},{"ruleId":"331","severity":1,"message":"351","line":256,"column":8,"nodeType":"349","endLine":256,"endColumn":10,"suggestions":"352"},{"ruleId":"322","severity":1,"message":"326","line":265,"column":33,"nodeType":"324","messageId":"325","endLine":265,"endColumn":35},{"ruleId":"331","severity":1,"message":"353","line":280,"column":8,"nodeType":"349","endLine":280,"endColumn":20,"suggestions":"354"},{"ruleId":"331","severity":1,"message":"355","line":289,"column":121,"nodeType":"349","endLine":289,"endColumn":141,"suggestions":"356"},{"ruleId":"336","severity":1,"message":"337","line":311,"column":13,"nodeType":"335","endLine":311,"endColumn":219},{"ruleId":"322","severity":1,"message":"326","line":311,"column":92,"nodeType":"324","messageId":"325","endLine":311,"endColumn":94},{"ruleId":"322","severity":1,"message":"326","line":311,"column":132,"nodeType":"324","messageId":"325","endLine":311,"endColumn":134},{"ruleId":"322","severity":1,"message":"323","line":314,"column":31,"nodeType":"324","messageId":"325","endLine":314,"endColumn":33},{"ruleId":"322","severity":1,"message":"326","line":314,"column":116,"nodeType":"324","messageId":"325","endLine":314,"endColumn":118},{"ruleId":"333","severity":1,"message":"334","line":320,"column":21,"nodeType":"335","endLine":324,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":325,"column":21,"nodeType":"335","endLine":329,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":330,"column":21,"nodeType":"335","endLine":334,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":335,"column":21,"nodeType":"335","endLine":339,"endColumn":24},{"ruleId":"336","severity":1,"message":"337","line":391,"column":38,"nodeType":"335","endLine":391,"endColumn":61},{"ruleId":"322","severity":1,"message":"326","line":392,"column":55,"nodeType":"324","messageId":"325","endLine":392,"endColumn":57},{"ruleId":"322","severity":1,"message":"326","line":398,"column":195,"nodeType":"324","messageId":"325","endLine":398,"endColumn":197},{"ruleId":"336","severity":1,"message":"337","line":410,"column":48,"nodeType":"335","endLine":410,"endColumn":71},{"ruleId":"322","severity":1,"message":"326","line":34,"column":24,"nodeType":"324","messageId":"325","endLine":34,"endColumn":26},{"ruleId":"322","severity":1,"message":"326","line":55,"column":20,"nodeType":"324","messageId":"325","endLine":55,"endColumn":22},{"ruleId":"327","severity":1,"message":"328","line":84,"column":5,"nodeType":"329","messageId":"330","endLine":166,"endColumn":6},{"ruleId":"357","severity":1,"message":"358","line":85,"column":17,"nodeType":"359","messageId":"360","endLine":85,"endColumn":29},{"ruleId":"357","severity":1,"message":"358","line":86,"column":17,"nodeType":"359","messageId":"360","endLine":86,"endColumn":29},{"ruleId":"357","severity":1,"message":"358","line":87,"column":17,"nodeType":"359","messageId":"360","endLine":87,"endColumn":29},{"ruleId":"357","severity":1,"message":"358","line":88,"column":17,"nodeType":"359","messageId":"360","endLine":88,"endColumn":29},{"ruleId":"357","severity":1,"message":"358","line":89,"column":17,"nodeType":"359","messageId":"360","endLine":89,"endColumn":29},{"ruleId":"357","severity":1,"message":"358","line":90,"column":17,"nodeType":"359","messageId":"360","endLine":90,"endColumn":29},{"ruleId":"357","severity":1,"message":"358","line":91,"column":17,"nodeType":"359","messageId":"360","endLine":91,"endColumn":29},{"ruleId":"357","severity":1,"message":"358","line":92,"column":17,"nodeType":"359","messageId":"360","endLine":92,"endColumn":29},{"ruleId":"357","severity":1,"message":"358","line":93,"column":17,"nodeType":"359","messageId":"360","endLine":93,"endColumn":29},{"ruleId":"357","severity":1,"message":"358","line":94,"column":17,"nodeType":"359","messageId":"360","endLine":94,"endColumn":29},{"ruleId":"357","severity":1,"message":"358","line":95,"column":18,"nodeType":"359","messageId":"360","endLine":95,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":96,"column":18,"nodeType":"359","messageId":"360","endLine":96,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":97,"column":18,"nodeType":"359","messageId":"360","endLine":97,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":98,"column":18,"nodeType":"359","messageId":"360","endLine":98,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":99,"column":18,"nodeType":"359","messageId":"360","endLine":99,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":100,"column":18,"nodeType":"359","messageId":"360","endLine":100,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":101,"column":18,"nodeType":"359","messageId":"360","endLine":101,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":102,"column":18,"nodeType":"359","messageId":"360","endLine":102,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":103,"column":18,"nodeType":"359","messageId":"360","endLine":103,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":104,"column":18,"nodeType":"359","messageId":"360","endLine":104,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":105,"column":18,"nodeType":"359","messageId":"360","endLine":105,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":106,"column":18,"nodeType":"359","messageId":"360","endLine":106,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":107,"column":18,"nodeType":"359","messageId":"360","endLine":107,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":108,"column":18,"nodeType":"359","messageId":"360","endLine":108,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":109,"column":18,"nodeType":"359","messageId":"360","endLine":109,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":110,"column":18,"nodeType":"359","messageId":"360","endLine":110,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":111,"column":18,"nodeType":"359","messageId":"360","endLine":111,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":112,"column":18,"nodeType":"359","messageId":"360","endLine":112,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":113,"column":18,"nodeType":"359","messageId":"360","endLine":113,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":114,"column":18,"nodeType":"359","messageId":"360","endLine":114,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":115,"column":18,"nodeType":"359","messageId":"360","endLine":115,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":116,"column":18,"nodeType":"359","messageId":"360","endLine":116,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":117,"column":18,"nodeType":"359","messageId":"360","endLine":117,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":118,"column":18,"nodeType":"359","messageId":"360","endLine":118,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":119,"column":18,"nodeType":"359","messageId":"360","endLine":119,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":120,"column":18,"nodeType":"359","messageId":"360","endLine":120,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":121,"column":18,"nodeType":"359","messageId":"360","endLine":121,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":122,"column":18,"nodeType":"359","messageId":"360","endLine":122,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":123,"column":18,"nodeType":"359","messageId":"360","endLine":123,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":124,"column":18,"nodeType":"359","messageId":"360","endLine":124,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":125,"column":18,"nodeType":"359","messageId":"360","endLine":125,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":126,"column":18,"nodeType":"359","messageId":"360","endLine":126,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":127,"column":18,"nodeType":"359","messageId":"360","endLine":127,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":128,"column":18,"nodeType":"359","messageId":"360","endLine":128,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":129,"column":18,"nodeType":"359","messageId":"360","endLine":129,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":130,"column":18,"nodeType":"359","messageId":"360","endLine":130,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":131,"column":18,"nodeType":"359","messageId":"360","endLine":131,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":132,"column":18,"nodeType":"359","messageId":"360","endLine":132,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":133,"column":18,"nodeType":"359","messageId":"360","endLine":133,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":134,"column":18,"nodeType":"359","messageId":"360","endLine":134,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":135,"column":18,"nodeType":"359","messageId":"360","endLine":135,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":136,"column":18,"nodeType":"359","messageId":"360","endLine":136,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":137,"column":18,"nodeType":"359","messageId":"360","endLine":137,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":138,"column":18,"nodeType":"359","messageId":"360","endLine":138,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":139,"column":18,"nodeType":"359","messageId":"360","endLine":139,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":140,"column":18,"nodeType":"359","messageId":"360","endLine":140,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":141,"column":18,"nodeType":"359","messageId":"360","endLine":141,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":142,"column":18,"nodeType":"359","messageId":"360","endLine":142,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":143,"column":18,"nodeType":"359","messageId":"360","endLine":143,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":144,"column":18,"nodeType":"359","messageId":"360","endLine":144,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":145,"column":18,"nodeType":"359","messageId":"360","endLine":145,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":146,"column":18,"nodeType":"359","messageId":"360","endLine":146,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":147,"column":18,"nodeType":"359","messageId":"360","endLine":147,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":148,"column":18,"nodeType":"359","messageId":"360","endLine":148,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":149,"column":18,"nodeType":"359","messageId":"360","endLine":149,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":150,"column":18,"nodeType":"359","messageId":"360","endLine":150,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":151,"column":18,"nodeType":"359","messageId":"360","endLine":151,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":152,"column":18,"nodeType":"359","messageId":"360","endLine":152,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":153,"column":18,"nodeType":"359","messageId":"360","endLine":153,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":154,"column":18,"nodeType":"359","messageId":"360","endLine":154,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":155,"column":18,"nodeType":"359","messageId":"360","endLine":155,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":156,"column":18,"nodeType":"359","messageId":"360","endLine":156,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":157,"column":18,"nodeType":"359","messageId":"360","endLine":157,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":158,"column":18,"nodeType":"359","messageId":"360","endLine":158,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":159,"column":18,"nodeType":"359","messageId":"360","endLine":159,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":160,"column":18,"nodeType":"359","messageId":"360","endLine":160,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":161,"column":18,"nodeType":"359","messageId":"360","endLine":161,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":162,"column":18,"nodeType":"359","messageId":"360","endLine":162,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":163,"column":18,"nodeType":"359","messageId":"360","endLine":163,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":164,"column":18,"nodeType":"359","messageId":"360","endLine":164,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":165,"column":18,"nodeType":"359","messageId":"360","endLine":165,"endColumn":30},{"ruleId":"336","severity":1,"message":"337","line":175,"column":17,"nodeType":"335","endLine":175,"endColumn":192},{"ruleId":"336","severity":1,"message":"337","line":176,"column":17,"nodeType":"335","endLine":176,"endColumn":235},{"ruleId":"322","severity":1,"message":"326","line":190,"column":61,"nodeType":"324","messageId":"325","endLine":190,"endColumn":63},{"ruleId":"336","severity":1,"message":"337","line":60,"column":13,"nodeType":"335","endLine":60,"endColumn":219},{"ruleId":"322","severity":1,"message":"326","line":60,"column":92,"nodeType":"324","messageId":"325","endLine":60,"endColumn":94},{"ruleId":"322","severity":1,"message":"326","line":60,"column":132,"nodeType":"324","messageId":"325","endLine":60,"endColumn":134},{"ruleId":"322","severity":1,"message":"326","line":64,"column":98,"nodeType":"324","messageId":"325","endLine":64,"endColumn":100},{"ruleId":"322","severity":1,"message":"326","line":64,"column":177,"nodeType":"324","messageId":"325","endLine":64,"endColumn":179},{"ruleId":"333","severity":1,"message":"361","line":67,"column":25,"nodeType":"335","endLine":67,"endColumn":117},{"ruleId":"333","severity":1,"message":"361","line":68,"column":25,"nodeType":"335","endLine":68,"endColumn":117},{"ruleId":"333","severity":1,"message":"361","line":69,"column":25,"nodeType":"335","endLine":69,"endColumn":118},{"ruleId":"336","severity":1,"message":"337","line":72,"column":17,"nodeType":"335","endLine":72,"endColumn":115},{"ruleId":"322","severity":1,"message":"326","line":77,"column":98,"nodeType":"324","messageId":"325","endLine":77,"endColumn":100},{"ruleId":"322","severity":1,"message":"326","line":77,"column":176,"nodeType":"324","messageId":"325","endLine":77,"endColumn":178},{"ruleId":"322","severity":1,"message":"326","line":77,"column":254,"nodeType":"324","messageId":"325","endLine":77,"endColumn":256},{"ruleId":"322","severity":1,"message":"326","line":77,"column":332,"nodeType":"324","messageId":"325","endLine":77,"endColumn":334},{"ruleId":"333","severity":1,"message":"361","line":80,"column":25,"nodeType":"335","endLine":80,"endColumn":116},{"ruleId":"333","severity":1,"message":"361","line":81,"column":25,"nodeType":"335","endLine":81,"endColumn":116},{"ruleId":"333","severity":1,"message":"361","line":82,"column":25,"nodeType":"335","endLine":82,"endColumn":116},{"ruleId":"333","severity":1,"message":"361","line":83,"column":25,"nodeType":"335","endLine":83,"endColumn":116},{"ruleId":"333","severity":1,"message":"361","line":84,"column":25,"nodeType":"335","endLine":84,"endColumn":116},{"ruleId":"333","severity":1,"message":"361","line":95,"column":25,"nodeType":"335","endLine":95,"endColumn":112},{"ruleId":"333","severity":1,"message":"361","line":96,"column":25,"nodeType":"335","endLine":96,"endColumn":113},{"ruleId":"333","severity":1,"message":"361","line":97,"column":25,"nodeType":"335","endLine":97,"endColumn":113},{"ruleId":"333","severity":1,"message":"361","line":98,"column":25,"nodeType":"335","endLine":98,"endColumn":113},{"ruleId":"333","severity":1,"message":"361","line":99,"column":25,"nodeType":"335","endLine":99,"endColumn":113},"no-native-reassign",["362"],"no-negated-in-lhs",["363"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect received a function whose dependencies are unknown. Pass an inline function instead.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["362"],["363"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'preLoadedImages' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.setImagesSize', 'props.setLangauge', 'props.setLastConnected', 'props.setListLength', and 'props.setTitlesSize'. Either include them or remove the dependency array.","ArrayExpression",["364"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["365"],"React Hook useEffect has missing dependencies: 'props.fetchData', 'props.id', 'props.lang', and 'props.setList'. Either include them or remove the dependency array.",["366"],"React Hook useEffect has missing dependencies: 'props.fetchData.general.images' and 'props.fetchData.he.items'. Either include them or remove the dependency array.",["367"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},"Update the dependencies array to be: [props.setImagesSize, props.setLangauge, props.setLastConnected, props.setListLength, props.setTitlesSize]",{"range":"376","text":"377"},"Update the dependencies array to be: [props]",{"range":"378","text":"379"},"Update the dependencies array to be: [props.fetchData, props.id, props.lang, props.list, props.setList]",{"range":"380","text":"381"},"Update the dependencies array to be: [props.fetchData.general.images, props.fetchData.he.items, props.fetchLoading]",{"range":"382","text":"383"},[9038,9040],"[props.setImagesSize, props.setLangauge, props.setLastConnected, props.setListLength, props.setTitlesSize]",[9414,9416],"[props]",[10220,10232],"[props.fetchData, props.id, props.lang, props.list, props.setList]",[10598,10618],"[props.fetchData.general.images, props.fetchData.he.items, props.fetchLoading]"]